{"version":3,"sources":["App.tsx","components/HomePage.tsx","components/TabsPage.tsx","Root.tsx","index.tsx"],"names":["getLinkClass","isActive","classNames","App","className","to","HomePage","tabs","id","title","content","TabsPage","tabId","useParams","selectedTab","find","tab","map","Root","path","element","index","container","document","getElementById","createRoot","render"],"mappings":"yOAMMA,EAAe,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,SACtB,OAAOC,IAAW,cAAe,CAC/B,YAAaD,GAEhB,EAEYE,EAAM,WACjB,OACE,qCACE,qBACEC,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASC,GAAG,IAAID,UAAWJ,EAA3B,kBACA,cAAC,IAAD,CAASK,GAAG,QAAQD,UAAWJ,EAA/B,yBAKN,qBAAKI,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,EChCYE,G,KAAqB,kBAChC,oBAAIF,UAAU,QAAd,sBADgC,GCG5BG,EAAc,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAG7BC,EAAqB,WAChC,IAAQC,EAAUC,cAAVD,MACFE,EAAcP,EAAKQ,MAAK,SAAAC,GAAG,OAAIA,EAAIR,KAAOI,CAAf,IAEjC,OACE,qCACE,oBAAIR,UAAU,QAAd,uBAIA,qBAAKA,UAAU,gBAAf,SACE,6BACGG,EAAKU,KAAI,SAAAD,GACR,IAAQR,EAAcQ,EAAdR,GAAIC,EAAUO,EAAVP,MAEZ,OACE,mCACE,oBAEE,UAAQ,MACRL,UAAWF,IAAW,GAAI,CACxB,aAAwB,OAAXY,QAAW,IAAXA,OAAA,EAAAA,EAAaN,MAAOA,IAJrC,SAOE,cAAC,IAAD,CAAMH,GAAE,aAAQG,GAAhB,SAAuBC,KANlBD,IAUZ,QAIL,qBAAKJ,UAAU,QAAQ,UAAQ,aAA/B,SACIU,EAGAA,EAAYJ,QAFZ,0BAOT,ECzCYQ,EAAO,kBAClB,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUf,GAAG,QAC1C,eAAC,IAAD,CAAOc,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MAEtB,cAAC,IAAD,CAAOD,KAAK,OAAZ,SACE,cAAC,IAAD,CAAOA,KAAK,UAAUC,QAAS,cAAC,EAAD,QAGjC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,oBAAIhB,UAAU,QAAd,qCAXb,ECRdkB,EAAYC,SAASC,eAAe,QAE1CC,qBAAWH,GACRI,OAAO,cAAC,EAAD,I","file":"static/js/main.e24820a2.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst getLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'is-active': isActive,\n  });\n};\n\nexport const App = () => {\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={getLinkClass}>Home</NavLink>\n            <NavLink to=\"/tabs\" className={getLinkClass}>Tabs</NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">\n    Home page\n  </h1>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../types/Tab';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const TabsPage: React.FC = () => {\n  const { tabId } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">\n        Tabs page\n      </h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <>\n                <li\n                  key={id}\n                  data-cy=\"Tab\"\n                  className={classNames('', {\n                    'is-active': selectedTab?.id === id,\n                  })}\n                >\n                  <Link to={`../${id}`}>{title}</Link>\n                </li>\n              </>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {!selectedTab ? (\n          'Please select a tab'\n        ) : (\n          selectedTab.content\n        )}\n      </div>\n    </>\n  );\n};\n","import {\n  Routes,\n  Route,\n  HashRouter,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { TabsPage } from './components/TabsPage';\n\nexport const Root = () => (\n  <HashRouter>\n    <Routes>\n      <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n\n        <Route path=\"tabs\">\n          <Route path=\":tabId?\" element={<TabsPage />} />\n        </Route>\n\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </HashRouter>\n);\n","import { createRoot } from 'react-dom/client';\nimport { Root } from './Root';\n\nconst container = document.getElementById('root') as HTMLElement;\n\ncreateRoot(container)\n  .render(<Root />);\n"],"sourceRoot":""}